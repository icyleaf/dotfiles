#!/usr/bin/env bash
#
# bootstrap installs things.

source functions/_lib.sh
source functions/load-cli-parser.sh

setup_gitconfig () {
  local local_gitconfig=config/general/git/gitconfig.local.symlink
  if ! [ -f "$local_gitconfig" ]; then
    info 'setup gitconfig'

    git_credential='cache'
    if [ "$(uname -s)" == "Darwin" ]; then
      git_credential='osxkeychain'
    fi

    user ' - What is your git author name?'
    read -e git_authorname
    user ' - What is your git author email?'
    read -e git_authoremail

    sed -e "s/AUTHORNAME/$git_authorname/g" -e "s/AUTHOREMAIL/$git_authoremail/g" -e "s/GIT_CREDENTIAL_HELPER/$git_credential/g" "${local_gitconfig}.example" > $local_gitconfig

    success 'gitconfig'
  fi
}

install_dotfiles () {
  local dotfile_path=$1
  for src in $(find -H "$dotfile_path" -maxdepth 2 -name '*.symlink' -not -path '*.git*'); do
    dst="${HOME:-~}/.$(basename "${src%.*}")"
    link_file "$src" "$dst"
  done
}

run_installer() {
  local install_path=$1
  for installer in $(find "$install_path" -name install.sh | sort); do
    local installer_name=$(basename $(dirname $installer))
    info "Running installer: $installer_name"
    $installer
    success "Installer done: $installer_name"
    echo
  done
}

setup_macos() {
  $ROOTPATH/bin/macos
}

#############################
# Main
#############################

if [ "$ONLY_LINK_FILES" == "false" ]; then
  setup_gitconfig
fi

info "Installing dotfiles ... $(os_name)"
install_dotfiles "${ROOTPATH}/config/general"
install_dotfiles "${ROOTPATH}/config/$(os_name)"
success 'dotfiles done'
echo

if [ "$ONLY_LINK_FILES" == "false" ]; then
  run_installer "${ROOTPATH}/config/general"
  run_installer "${ROOTPATH}/config/$(os_name)"
  setup_macos
fi

echo
echo '  All installed!'
