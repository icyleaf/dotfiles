#!/usr/bin/env bash
#
# bootstrap installs things.

source functions/_bash

DOTFILES_ROOT="`pwd`"

if ! [ -z "$DOTFILES_PATH" ]
then
  fail "Dotfile already install in ${DOTFILES_PATH}"
fi

setup_gitconfig () {
  if ! [ -f git/gitconfig.local.symlink ]
  then
    info 'setup gitconfig'

    git_credential='cache'
    if [ "$(uname -s)" == "Darwin" ]
    then
      git_credential='osxkeychain'
    fi

    user ' - What is your github author name?'
    read -e git_authorname
    user ' - What is your github author email?'
    read -e git_authoremail

    sed -e "s/AUTHORNAME/$git_authorname/g" -e "s/AUTHOREMAIL/$git_authoremail/g" -e "s/GIT_CREDENTIAL_HELPER/$git_credential/g" git/gitconfig.local.symlink.example > git/gitconfig.local.symlink

    success 'gitconfig'
  fi
}

install_dotfiles () {
  info 'installing dotfiles'

  local overwrite_all=false backup_all=false skip_all=false

  for src in $(find -H "$DOTFILES_ROOT" -maxdepth 2 -name '*.symlink' -not -path '*.git*')
  do
    dst="$HOME/.$(basename "${src%.*}")"
    link_file "$src" "$dst"
  done
}

# link_system_files () {
#   overwrite_all=false
#   backup_all=false
#   skip_all=false

#   system_path="${DOTFILES_ROOT}/system"
#   for source in `find $system_path -type f ! -iname ".DS_Store"`
#   do
#     dest=${source//$system_path/''}
#     linking_file $source $dest true
#   done
# }

# install_apps () {
#   if test ! $(which brew)
#   then
#     info 'installing homebrew'
#     sh -c "brew/init.sh"
#     success 'homebrew installed'
#   fi

#   for installer in `find $DOTFILES_ROOT -d 2 -name "install.sh"`
#   do
#     info $installer
#     sh -c "${installer}"
#   done
# }

setup_gitconfig
install_dotfiles

# If we're on a Mac, let's install and setup homebrew.
# if [ "$(uname -s)" == "Darwin" ]
# then
#   info "installing dependencies"
#   if source bin/dot | while read -r data; do info "$data"; done
#   then
#     success "dependencies installed"
#   else
#     fail "error installing dependencies"
#   fi
# fi

echo ''
echo '  All installed!'
